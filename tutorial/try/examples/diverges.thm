Specification "eval".

% We can also define divergence coinductivly to prove that
% (lambda x . x x) (lambda x . x x) diverges

Theorem eval_det :
  forall E V1 V2, {eval E V1} -> {eval E V2} -> V1 = V2.
induction on 1. intros. case H1.
  case H2. search.
  case H2. apply IH to H3 H5. apply IH to H4 H6. search.

CoDefine diverge : tm -> prop by
  diverge (app M N) := diverge M ;
  diverge (app M N) := exists R, {eval M (abs R)} /\ diverge (R N).

Theorem omega_diverge :
  diverge (app (abs x\ app x x) (abs x\ app x x)).
coinduction. search.

% More generally we can prove that evaluation and divergence are
% mutually exclusive
Theorem eval_diverge_absurd : forall M V,
  {eval M V} -> diverge M -> false.
induction on 1. intros. case H1.
  case H2.
  case H2.
    apply IH to H3 H5.
    apply eval_det to H3 H5. apply IH to H4 H6.
